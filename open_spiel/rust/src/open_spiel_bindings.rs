/* automatically generated by rust-bindgen 0.59.2 */

extern "C" {
    pub fn NewGameParameters() -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn DeleteGameParameters(params_ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn GameParametersSetInt(
        params_ptr: *mut ::std::os::raw::c_void,
        key: *const ::std::os::raw::c_char,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GameParametersSetDouble(
        params_ptr: *mut ::std::os::raw::c_void,
        key: *const ::std::os::raw::c_char,
        value: ::std::os::raw::c_double,
    );
}
extern "C" {
    pub fn GameParametersSetString(
        params_ptr: *mut ::std::os::raw::c_void,
        key: *const ::std::os::raw::c_char,
        value: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn GameParametersSerialize(
        params_ptr: *mut ::std::os::raw::c_void,
        length: *mut ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn LoadGame(name: *const ::std::os::raw::c_char) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn LoadGameFromParameters(
        params_ptr: *const ::std::os::raw::c_void,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn DeleteGame(game_ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn GameShortName(
        game_ptr: *const ::std::os::raw::c_void,
        length: *mut ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn GameLongName(
        game_ptr: *const ::std::os::raw::c_void,
        length: *mut ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn GameNewInitialState(
        game_ptr: *const ::std::os::raw::c_void,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn GameNumPlayers(game_ptr: *const ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GameMaxGameLength(game_ptr: *const ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GameNumDistinctActions(game_ptr: *const ::std::os::raw::c_void)
    -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GameObservationTensorShape(
        game_ptr: *const ::std::os::raw::c_void,
        size: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_int;
}
extern "C" {
    pub fn GameInformationStateTensorShape(
        game_ptri: *const ::std::os::raw::c_void,
        size: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_int;
}
extern "C" {
    pub fn DeleteState(state_ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn StateClone(state_ptr: *const ::std::os::raw::c_void) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn StateToString(
        state_ptr: *const ::std::os::raw::c_void,
        length: *mut ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn StateLegalActions(
        state_ptr: *const ::std::os::raw::c_void,
        num_legal_actions: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_long;
}
extern "C" {
    pub fn StateCurrentPlayer(state_ptr: *const ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn StateActionToString(
        state_ptr: *const ::std::os::raw::c_void,
        player: ::std::os::raw::c_int,
        action: ::std::os::raw::c_long,
        length: *mut ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn StateIsTerminal(state_ptr: *const ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn StateIsChanceNode(state_ptr: *const ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn StateNumPlayers(state_ptr: *const ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn StateApplyAction(state_ptr: *mut ::std::os::raw::c_void, action: ::std::os::raw::c_long);
}
extern "C" {
    pub fn StateReturns(
        state_ptr: *const ::std::os::raw::c_void,
        returns_buf: *mut ::std::os::raw::c_double,
    );
}
extern "C" {
    pub fn StatePlayerReturn(
        state_ptr: *const ::std::os::raw::c_void,
        player: ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn StateChanceOutcomeProbs(
        state_ptr: *const ::std::os::raw::c_void,
        size: *mut ::std::os::raw::c_int,
    ) -> *mut f64;
}
extern "C" {
    pub fn StateObservationString(
        state_ptr: *const ::std::os::raw::c_void,
        length: *mut ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn StateInformationStateString(
        state_ptr: *const ::std::os::raw::c_void,
        length: *mut ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn StateObservationTensorSize(
        state_ptr: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn StateInformationStateTensorSize(
        state_ptr: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn StateObservationTensor(
        state_ptr: *const ::std::os::raw::c_void,
        player: ::std::os::raw::c_int,
        obs_buf: *mut ::std::os::raw::c_float,
        length: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn StateInformationStateTensor(
        state_ptr: *const ::std::os::raw::c_void,
        player: ::std::os::raw::c_int,
        infostate_buf: *mut ::std::os::raw::c_float,
        length: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn DeleteBot(bot_ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn BotStep(
        bot_ptr: *mut ::std::os::raw::c_void,
        state_ptr: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn BotInformAction(
        bot_ptr: *mut ::std::os::raw::c_void,
        state_ptr: *const ::std::os::raw::c_void,
        player_id: ::std::os::raw::c_int,
        action: ::std::os::raw::c_long,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn BotRestart(bot_ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn BotRegistererCreateByName(
        bot_name_ptr: *const ::std::os::raw::c_char,
        game_ptr: *const ::std::os::raw::c_void,
        player_id: i32,
        params_ptr: *const ::std::os::raw::c_void,
    ) -> *mut ::std::os::raw::c_void;
}
